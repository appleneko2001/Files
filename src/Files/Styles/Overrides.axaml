<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:Material.Styles.Controls;assembly=Material.Styles"
        xmlns:cc="clr-namespace:Material.Styles;assembly=Material.Styles"
        xmlns:assists="clr-namespace:Material.Styles.Assists;assembly=Material.Styles"
        xmlns:menus="clr-namespace:Files.ViewModels.Context.Menus"
        xmlns:ripple="clr-namespace:Material.Ripple;assembly=Material.Ripple">
    <Style Selector="OverlayPopupHost">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <ControlTemplate>
                <VisualLayerManager IsPopup="True">
                    <ContentPresenter Name="PART_ContentPresenter"
                                      Background="{TemplateBinding Background}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Content="{TemplateBinding Content}"
                                      Padding="{TemplateBinding Padding}" />
                </VisualLayerManager>
            </ControlTemplate>
        </Setter>
    </Style>
    
    <Style Selector="MenuItem">
        <Setter Property="Height" Value="36"/>
    </Style>
    
    <Style Selector="MenuItem:separator">
        <Setter Property="Height" Value="NaN"/>
        <Setter Property="Template">
            <ControlTemplate>
                <Separator Background="{DynamicResource PrimaryHueMidBrush}"
                           Margin="0, 8"
                           Height="1" />
            </ControlTemplate>
        </Setter>
    </Style>
    
    <Style Selector="MenuItem /template/ ContentPresenter#PART_Icon">
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Margin" Value="0, 0, 16, 0"/>
        <Setter Property="ContentTemplate" Value="{StaticResource ContextMenuIconFactory}"/>
    </Style>
    
    <Style Selector="MenuItem /template/ ContentPresenter#PART_Icon > Path">
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="16"/>
    </Style>
    
    <Style Selector="ContextMenu#TextBoxContextMenu controls|MaterialInternalIcon">
        <Setter Property="Height" Value="16"/>
        <Setter Property="Width" Value="16"/>
    </Style>
    
    <Style Selector="ContextMenu">
        <Setter Property="HorizontalOffset" Value="-16.0" />
        <Setter Property="VerticalOffset" Value="-16.0" />
    </Style>
    
    <Style Selector="ContextMenu /template/ cc|Card#PART_ContextMenuCardRoot">
        <Setter Property="Margin" Value="16"/>
        <Setter Property="assists:ShadowAssist.ShadowDepth" Value="CenterDepth3"/>
    </Style>
    
    <Style Selector="ContextMenu#PART_BrowserViewContextMenu MenuItem">
        <Setter Property="Icon" Value="{Binding Icon}"/>
        <Setter Property="Header" Value="{Binding Header}"/>
        <Setter Property="Command" Value="{Binding Command}"/>
        <Setter Property="InputGesture" Value="{Binding Shortcut}"/>
        <Setter Property="IsVisible" >
            <Setter.Value>
                <MultiBinding Converter="{StaticResource MayExecuteConverter}">
                    <Binding Path="Command"/>
                    <Binding Path="CommandParameter"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="CommandParameter" Value="{Binding CommandParameter}"/>
    </Style>
    
    <Style Selector="Button.browser-drawer-item">
        <Setter Property="Template">
            <ControlTemplate>
                <Border BorderBrush="Transparent"
                        BorderThickness="1"
                        Margin="-1">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <Panel>
                            <Border Background="{TemplateBinding assists:ButtonAssist.HoverColor}"
                                    CornerRadius="{TemplateBinding CornerRadius}" 
                                    Opacity="0"/>
                            <Border CornerRadius="{TemplateBinding CornerRadius}"
                                    ClipToBounds="True" >
                                <ripple:RippleEffect RippleFill="{TemplateBinding assists:ButtonAssist.ClickFeedbackColor}"
                                                     RippleOpacity="{StaticResource ButtonPressedOpacity}" >
                                    <ContentPresenter Content="{TemplateBinding Content}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      Padding="{TemplateBinding Padding}"
                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </ripple:RippleEffect>
                            </Border>
                        </Panel>
                    </Border>
                </Border>
            </ControlTemplate>
        </Setter>
    </Style>
</Styles>